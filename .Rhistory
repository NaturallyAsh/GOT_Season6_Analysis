""
))
text_grob <- grobTree(richtext_grob(
"<span style=\"fontsize: 1em\"><br><br>The top characters in each community based on their number of connections. <br>Sansa of House Stark and Daenarys Mother of Dragons are the most important characters in that<br>they are the most central to the overall narrative.</span>",
gp = gpar(fontsize = 8), hjust = 0, align_widths = TRUE, padding = unit(c(6, 6, 4, 6), "pt")
))
ggraph(top_char_net, layout = "stress") +
geom_edge_link2(aes(alpha = Weight)) +
geom_node_point(aes(color = factor(cluster), size = between)) + # remember to convert cluster to factor
geom_node_text(aes(label = Label, size = rank)) +
theme_graph() +
theme(
legend.position = "none"
)
library(tidygraph)
library(ggraph)
library(igraph)
library(tidyverse)
library(kableExtra)
got_s6_edges <- read_csv("data/got-s6-edges.csv")
got_s6_nodes <- read_csv("data/got-s6-nodes.csv")
glimpse(got_s6_edges)
glimpse(got_s6_nodes)
got_tidygraph <- tbl_graph(nodes = got_s6_nodes, edges = got_s6_edges, directed = FALSE)
got_tidygraph |>
activate(edges) |>
as_tibble() |>
summarise(`Total Interactions` = sum(Weight)) |>
head() |>
kbl(
# caption = "Total Interactions",
align = "l",
) |>
kable_classic()
net1 <- got_tidygraph |>
activate(nodes) |>
mutate(
cluster = group_louvain(),
between = centrality_betweenness(),
rank = centrality_pagerank()
)
set.seed(123)
ggraph(net1, layout = "stress") +
geom_edge_link2(aes(alpha = Weight)) +
geom_node_point(aes(color = factor(cluster), size = between)) + # remember to convert cluster to factor
geom_node_text(aes(label = Label, size = rank)) +
theme_graph() +
theme(
legend.position = "none"
)
# got_s6_edges_vizNet <- janitor::clean_names(got_s6_edges)
# got_s6_nodes_vizNet <- janitor::clean_names(got_s6_nodes)
#
# got_tidygraph_vizNet <- tbl_graph(nodes = got_s6_nodes_vizNet, edges = got_s6_edges_vizNet, directed = FALSE)
#
# nodes_got_tidygraph_vizNet <- got_tidygraph_vizNet |>
#   activate(nodes) |>
#   mutate(
#     group = group_louvain(),
#     size = centrality_betweenness(),
#     title = label
#   ) |>
#   as_tibble()
#
# edges_got_tidygraph_vizNet <- got_tidygraph_vizNet |>
#   activate(edges) |>
#   as_tibble()
#
# got_s6_nodes_vizNet <- got_s6_nodes_vizNet |>
#   mutate(
#     size = nodes_got_tidygraph_vizNet$size,
#     group = nodes_got_tidygraph_vizNet$group,
#     title = nodes_got_tidygraph_vizNet$title,
#     value = size
#   )
#
# got_igraph_vizNet <- graph_from_data_frame(
#   got_s6_edges_vizNet,
#   directed = FALSE,
#   vertices = got_s6_nodes_vizNet
# )
#
# vizNet <- toVisNetworkData(got_igraph_vizNet, idToLabel = FALSE)
#
# visNetwork(nodes = vizNet$nodes, edges = vizNet$edges, randomSeed = 123) |>
#   visOptions(selectedBy = "group") |>
#   visNodes(shape = "circle")
# Get the list of different group numbers
got_clusters <- net1 |>
activate(nodes) |>
select(cluster) |>
pull() |> unique() |> sort()
# Find and save the name of the most connected character in each group
top_characters <- c()
for (i in got_clusters) {
tops <- net1 |>
activate(nodes) |>
mutate(degree = centrality_degree()) |>
filter(cluster == i) |>
arrange(desc(degree)) |>
top_n(degree, n = 1) |>
pull(Label)
top_characters <- top_characters |> append(tops)
}
# Show the names of the top person found in each group
print("Most Connected Person (by Direct Ties) in each Group:")
print(top_characters)
set.seed(123)
top_char_net <- net1 |>
activate(nodes) |>
mutate(
Label = ifelse(
Label %in% top_characters,
Label,
""
))
ggraph(top_char_net, layout = "stress") +
geom_edge_link2(aes(alpha = Weight)) +
geom_node_point(aes(color = factor(cluster), size = between)) + # remember to convert cluster to factor
geom_node_text(aes(label = Label, size = rank)) +
theme_graph() +
theme(
legend.position = "none"
)
ggraph(net1, layout = "stress") +
geom_edge_link2(aes(alpha = Weight)) +
geom_node_point(aes(color = factor(cluster), size = between+1)) + # remember to convert cluster to factor
geom_node_text(aes(label = Label, size = rank)) +
theme_graph() +
theme(
legend.position = "none"
)
ggraph(net1, layout = "stress") +
geom_edge_link2(aes(alpha = Weight+10)) +
geom_node_point(aes(color = factor(cluster), size = between+1)) + # remember to convert cluster to factor
geom_node_text(aes(label = Label, size = rank)) +
theme_graph() +
theme(
legend.position = "none"
)
ggraph(net1, layout = "stress") +
geom_edge_link2(aes(alpha = Weight+10)) +
geom_node_point(aes(color = factor(cluster), size = between+1)) + # remember to convert cluster to factor
geom_node_text(aes(label = Label, size = rank+0.5)) +
theme_graph() +
theme(
legend.position = "none"
)
ggraph(net1, layout = "stress") +
geom_edge_link2(aes(alpha = Weight+10)) +
geom_node_point(aes(color = factor(cluster), size = between+1)) + # remember to convert cluster to factor
geom_node_text(aes(label = Label, size = rank+5)) +
theme_graph() +
theme(
legend.position = "none"
)
ggraph(net1, layout = "stress") +
geom_edge_link2(aes(alpha = Weight+10)) +
geom_node_point(aes(color = factor(cluster), size = between+5)) + # remember to convert cluster to factor
geom_node_text(aes(label = Label, size = rank+5)) +
theme_graph() +
theme(
legend.position = "none"
)
ggraph(net1, layout = "stress") +
geom_edge_link2(aes(alpha = Weight+10)) +
geom_node_point(aes(color = factor(cluster), size = between+50)) + # remember to convert cluster to factor
geom_node_text(aes(label = Label, size = rank+5)) +
theme_graph() +
theme(
legend.position = "none"
)
ggraph(net1, layout = "stress") +
geom_edge_link2(aes(alpha = Weight+10)) +
geom_node_point(aes(color = factor(cluster), size = between+500)) + # remember to convert cluster to factor
geom_node_text(aes(label = Label, size = rank+5)) +
theme_graph() +
theme(
legend.position = "none"
)
ggraph(net1, layout = "stress") +
geom_edge_link2(aes(alpha = Weight+10)) +
geom_node_point(aes(color = factor(cluster), size = between)) + # remember to convert cluster to factor
geom_node_text(aes(label = Label, size = rank+5)) +
theme_graph() +
theme(
legend.position = "none"
)
ggraph(net1, layout = "stress") +
geom_edge_link2(aes(alpha = Weight+10)) +
geom_node_point(size = 10, aes(color = factor(cluster), size = between)) + # remember to convert cluster to factor
geom_node_text(aes(label = Label, size = rank+5)) +
theme_graph() +
theme(
legend.position = "none"
)
ggraph(net1, layout = "stress") +
geom_edge_link2(aes(alpha = Weight+10)) +
geom_node_point(size = 5, aes(color = factor(cluster), size = between)) + # remember to convert cluster to factor
geom_node_text(aes(label = Label, size = rank+5)) +
theme_graph() +
theme(
legend.position = "none"
)
ggraph(net1, layout = "stress") +
geom_edge_link2(aes(alpha = Weight+10)) +
geom_node_point(size = 5, aes(color = factor(cluster), size = between)) + # remember to convert cluster to factor
geom_node_text(size = 5, aes(label = Label, size = rank+5)) +
theme_graph() +
theme(
legend.position = "none"
)
ggraph(net1, layout = "stress") +
geom_edge_link2(aes(alpha = Weight+10)) +
geom_node_point(size = 5, aes(color = factor(cluster), size = between)) + # remember to convert cluster to factor
geom_node_text(size = 2, aes(label = Label, size = rank)) +
theme_graph() +
theme(
legend.position = "none"
)
ggraph(net1, layout = "stress") +
geom_edge_link2(aes(alpha = Weight+10)) +
geom_node_point(size = 1, aes(color = factor(cluster), size = between)) + # remember to convert cluster to factor
geom_node_text(size = 2, aes(label = Label, size = rank)) +
theme_graph() +
theme(
legend.position = "none"
)
ggraph(net1, layout = "stress") +
geom_edge_link2(aes(alpha = Weight+10)) +
geom_node_point(aes(color = factor(cluster), size = between)) + # remember to convert cluster to factor
geom_node_text(size = 2, aes(label = Label, size = rank)) +
theme_graph() +
theme(
legend.position = "none"
)
ggraph(net1, layout = "stress") +
geom_edge_link2(aes(alpha = Weight+10)) +
geom_node_point(aes(color = factor(cluster), size = between)) + # remember to convert cluster to factor
geom_node_text(aes(label = Label, size = rank)) +
theme_graph() +
theme(
legend.position = "none"
)
theme_graph
ggraph(net1, layout = "stress") +
geom_edge_link2(aes(alpha = Weight+10)) +
geom_node_point(aes(color = factor(cluster), size = between)) + # remember to convert cluster to factor
geom_node_text(aes(label = Label, size = rank)) +
theme_graph() +
theme(
legend.position = "none",
plot.margin = margin(0.5, 0.2, 0.2, 0.5, "cm")
)
ggsave("net1.png", device = agg_png,
width = 10, height = 6, units = "cm", res = 300)
pak::pak('r-lib/ragg')
install.packages("pak")
pak::pak('r-lib/ragg')
ggsave("net1.png", device = ragg::agg_png,
width = 10, height = 6, units = "cm", res = 300)
ggsave("net1.png", device = ragg::agg_png, width = 100, height = 60, units = "cm", res = 300)
ggsave("net1.png", device = ragg::agg_png, width = 8, height = 4, units = "cm", res = 300)
ggsave("net1.png", device = ragg::agg_png, width = 8, height = 4, units = "in", res = 300)
ggsave("net1.png", device = ragg::agg_png, width = 18, height = 14, units = "in", res = 300)
ggsave("net1.png", device = ragg::agg_png, width = 18, units = "in", res = 300)
ggsave("net1.png", device = ragg::agg_png, width = 11, height = 6, units = "in", res = 300)
ggsave("net1.png", device = ragg::agg_png, width = 10, height = 6, units = "cm", res = 300)
ggsave("net1.png", device = ragg::agg_png, width = 11, height = 7, units = "cm", res = 300)
set.seed(123)
ggraph(net1, layout = "stress") +
geom_edge_link2(aes(alpha = Weight+10)) +
geom_node_point(aes(color = factor(cluster), size = between)) + # remember to convert cluster to factor
geom_node_text(aes(label = Label, size = rank)) +
theme_graph() +
theme(
legend.position = "none",
)
# ggsave("net1.png", device = ragg::agg_png, width = 11, height = 7, units = "cm", res = 300)
ggsave("net1.png", device = ragg::agg_png, width = 11, height = 7, units = "cm", res = 300, scaling = 0.5)
ggsave("net1.png", device = ragg::agg_png, width = "100%", units = "px", res = 300, scaling = 0.5)
ggsave("net1.png", device = ragg::agg_png, width = 1200, units = "px", res = 300, scaling = 0.5)
ggsave("net1.png", device = ragg::agg_png, width = 1200, units = "px", res = 300)
ggsave("net1.png", device = ragg::agg_png, width = 2100, units = "px", res = 300)
ggsave("net1.png", device = ragg::agg_png, width = 3600, units = "px", res = 300)
ggsave("net1.png", device = ragg::agg_png, width = 10, units = "cm", res = 300)
ggsave("net1.png", device = ragg::agg_png, width = 10, height = 6, units = "cm", res = 300)
ggsave("net1.png", device = ragg::agg_png, width = 9, height = 6, units = "cm", res = 300)
ggsave("net1.png", device = ragg::agg_png, width = 10, height = 5, units = "cm", res = 300)
ggsave("net1.png", device = ragg::agg_png, width = 11, height = 5, units = "cm", res = 300)
ggsave("net1.png", device = ragg::agg_png, width = 11, height = 3, units = "cm", res = 300)
ggsave("net1.png", device = ragg::agg_png, width = 11, height = 7, units = "cm", res = 300)
ggsave("net1.png", device = ragg::agg_png, width = 11, height = 8, units = "cm", res = 300)
ggsave("net1.png", device = ragg::agg_png, width = 12, height = 8, units = "cm", res = 300)
set.seed(123)
ggraph(net1, layout = "stress") +
geom_edge_link2(aes(alpha = Weight+10)) +
geom_node_point(aes(color = factor(cluster), size = between)) + # remember to convert cluster to factor
geom_node_text(aes(label = Label, size = rank)) +
theme_graph() +
theme(
legend.position = "none",
)
invisible(dev.off())
# ggsave("net1.png", device = ragg::agg_png, width = 12, height = 8, units = "cm", res = 300)
png(gnet)
set.seed(123)
gnet <- ggraph(net1, layout = "stress") +
geom_edge_link2(aes(alpha = Weight+10)) +
geom_node_point(aes(color = factor(cluster), size = between)) + # remember to convert cluster to factor
geom_node_text(aes(label = Label, size = rank)) +
theme_graph() +
theme(
legend.position = "none",
)
invisible(dev.off())
```{r, out.width="100%"}
#| out-width: 300px
ggraph(net1, layout = "stress") +
geom_edge_link2(aes(alpha = Weight+10)) +
geom_node_point(aes(color = factor(cluster), size = between)) + # remember to convert cluster to factor
geom_node_text(aes(label = Label, size = rank)) +
theme_graph() +
theme(
legend.position = "none",
)
#| out-width: "100%"
#| out-width: "100%"
set.seed(123)
ggraph(net1, layout = "stress") +
geom_edge_link2(aes(alpha = Weight+10)) +
geom_node_point(aes(color = factor(cluster), size = between)) + # remember to convert cluster to factor
geom_node_text(aes(label = Label, size = rank)) +
theme_graph() +
theme(
legend.position = "none",
)
# ggsave("net1.png", device = ragg::agg_png, width = 12, height = 8, units = "cm", res = 300)
ggraph(net1, layout = "stress") +
geom_edge_link2(aes(alpha = Weight+10)) +
geom_node_point(aes(color = factor(cluster), size = between)) + # remember to convert cluster to factor
geom_node_text(aes(label = Label, size = rank+7)) +
theme_graph() +
theme(
legend.position = "none",
)
ggraph(net1, layout = "stress") +
geom_edge_link2(aes(alpha = Weight+10)) +
geom_node_point(aes(color = factor(cluster), size = between)) + # remember to convert cluster to factor
geom_node_text(aes(label = Label, size = rank+7)) +
theme_graph() +
theme(
legend.position = "none",
plot.margin = margin(0.5, 0.2, 0.2, 0.5, "cm")
)
ggraph(net1, layout = "stress") +
geom_edge_link2(aes(alpha = Weight+10)) +
geom_node_point(aes(color = factor(cluster), size = between)) + # remember to convert cluster to factor
geom_node_text(aes(label = Label, size = rank+7)) +
theme_graph() +
theme(
legend.position = "none",
plot.margin = margin(0, 0.2, 0.2, 0.5, "cm")
)
ggraph(net1, layout = "stress") +
geom_edge_link2(aes(alpha = Weight+10)) +
geom_node_point(aes(color = factor(cluster), size = between)) + # remember to convert cluster to factor
geom_node_text(aes(label = Label, size = rank+7)) +
theme_graph() +
theme(
legend.position = "none",
plot.margin = margin(0, 0.2, 0, 0.5, "cm")
)
ggraph(net1, layout = "stress") +
geom_edge_link2(aes(alpha = Weight+10)) +
geom_node_point(aes(color = factor(cluster), size = between)) + # remember to convert cluster to factor
geom_node_text(aes(label = Label, size = rank+7)) +
theme_graph() +
theme(
legend.position = "none",
plot.margin = margin(0, 0, 0, 0.5, "cm")
)
ggraph(net1, layout = "stress") +
geom_edge_link2(aes(alpha = Weight+10)) +
geom_node_point(aes(color = factor(cluster), size = between)) + # remember to convert cluster to factor
geom_node_text(aes(label = Label, size = rank+7)) +
theme_graph() +
theme(
legend.position = "none",
plot.margin = margin(0, 0, 0, 0, "cm")
)
scale_size(range = c(2,10) +
ggraph(net1, layout = "stress") +
geom_edge_link2(aes(alpha = Weight+10)) +
geom_node_point(aes(color = factor(cluster), size = between+0.5)) + # remember to convert cluster to factor
geom_node_text(aes(label = Label, size = rank+7)) +
theme_graph() +
theme(
legend.position = "none",
plot.margin = margin(0, 0, 0, 0, "cm")
)
#| out-width: "100%"
set.seed(123)
#| out-width: "100%"
set.seed(123)
ggraph(net1, layout = "stress") +
geom_edge_link2(aes(alpha = Weight+10)) +
geom_node_point(aes(color = factor(cluster), size = between)) + # remember to convert cluster to factor
scale_size(range = c(2,10)) +
geom_node_text(aes(label = Label, size = rank+7)) +
theme_graph() +
theme(
legend.position = "none",
plot.margin = margin(0, 0, 0, 0, "cm")
)
# ggsave("net1.png", device = ragg::agg_png, width = 12, height = 8, units = "cm", res = 300)
ggraph(net1, layout = "stress") +
geom_edge_link2(aes(alpha = Weight+10)) +
geom_node_point(aes(color = factor(cluster), size = between)) + # remember to convert cluster to factor
scale_size(range = c(1,10)) +
geom_node_text(aes(label = Label, size = rank+7)) +
theme_graph() +
theme(
legend.position = "none",
plot.margin = margin(0, 0, 0, 0, "cm")
)
ggraph(net1, layout = "stress") +
geom_edge_link2(aes(alpha = Weight+10)) +
geom_node_point(aes(color = factor(cluster), size = between)) + # remember to convert cluster to factor
scale_size(range = c(1,12)) +
geom_node_text(aes(label = Label, size = rank+7)) +
theme_graph() +
theme(
legend.position = "none",
plot.margin = margin(0, 0, 0, 0, "cm")
)
ggraph(net1, layout = "stress") +
geom_edge_link2(aes(alpha = Weight+10)) +
geom_node_point(aes(color = factor(cluster), size = between)) + # remember to convert cluster to factor
scale_size(range = c(1,12)) +
geom_node_text(aes(label = Label, size = rank+7), repel = TRUE) +
theme_graph() +
theme(
legend.position = "none",
plot.margin = margin(0, 0, 0, 0, "cm")
)
ggraph(net1, layout = "stress") +
geom_edge_link2(aes(alpha = Weight+10)) +
geom_node_point(aes(color = factor(cluster), size = between)) + # remember to convert cluster to factor
scale_size(range = c(1,12)) +
geom_node_text(aes(label = Label, size = rank+7)) +
theme_graph() +
theme(
legend.position = "none",
plot.margin = margin(0, 0, 0, 0, "cm")
)
ggraph(net1, layout = "stress") +
geom_edge_link2(aes(edge_alpha = Weight+10)) +
geom_node_point(aes(color = factor(cluster), size = between)) + # remember to convert cluster to factor
scale_size(range = c(1,12)) +
geom_node_text(aes(label = Label, size = rank+7)) +
theme_graph() +
theme(
legend.position = "none",
plot.margin = margin(0, 0, 0, 0, "cm")
)
set.seed(123)
top_char_net <- net1 |>
activate(nodes) |>
mutate(
Label = ifelse(
Label %in% top_characters,
Label,
""
))
ggraph(top_char_net, layout = "stress") +
geom_edge_link2(aes(edge_alpha = Weight+10)) +
geom_node_point(aes(color = factor(cluster), size = between)) + # remember to convert cluster to factor
scale_size(range = c(1,12)) +
geom_node_text(aes(label = Label, size = rank+7)) +
theme_graph() +
theme(
legend.position = "none",
plot.margin = margin(0, 0, 0, 0, "cm")
)
ggraph(top_char_net, layout = "stress") +
geom_edge_link2(aes(alpha = Weight)) +
geom_node_point(aes(color = factor(cluster), size = between)) + # remember to convert cluster to factor
geom_node_text(aes(label = Label, size = rank)) +
theme_graph() +
theme(
legend.position = "none"
)
set.seed(123)
top_char_net <- net1 |>
activate(nodes) |>
mutate(
Label = ifelse(
Label %in% top_characters,
Label,
""
))
ggraph(top_char_net, layout = "stress") +
geom_edge_link2(aes(edge_alpha = Weight+10)) +
geom_node_point(aes(color = factor(cluster), size = between)) + # remember to convert cluster to factor
scale_size(range = c(1,12)) +
geom_node_text(aes(label = Label, size = rank+7)) +
theme_graph() +
theme(
legend.position = "none",
plot.margin = margin(0, 0, 0, 0, "cm")
)
