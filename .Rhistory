cluster = group_louvain(),
between = centrality_betweenness(),
rank = centrality_pagerank()
)
set.seed(123)
ggraph(net1, layout = "stress") +
geom_edge_link2(aes(alpha = Weight)) +
geom_node_point(aes(color = factor(cluster), size = between)) + # remember to convert cluster to factor
geom_node_text(aes(label = Label, size = rank)) +
theme_graph() +
theme(
legend.position = "none"
)
# get total number of communities
got_clusters <- net1 |>
activate(nodes) |>
select(cluster) |>
pull() |> unique() |> sort()
# Quick print view of the top characters of each community by degree centrality.
for (i in got_clusters) {
tops <- net1 |>
activate(nodes) |>
mutate(degree = centrality_degree()) |>
filter(cluster == i) |>
arrange(desc(degree))
print(tops)
}
#
top_characters <- c()
for (i in got_clusters) {
tops <- net1 |>
activate(nodes) |>
mutate(degree = centrality_degree()) |>
filter(cluster == i) |>
arrange(desc(degree)) |>
top_n(degree, n = 1) |>
pull(Label)
top_characters <- top_characters |> append(tops)
}
top_characters
set.seed(123)
top_char_net <- net1 |>
activate(nodes) |>
mutate(
Label = ifelse(
Label %in% top_characters,
Label,
""
))
ggraph(top_char_net, layout = "stress") +
geom_edge_link2(aes(alpha = Weight)) +
geom_node_point(aes(color = factor(cluster), size = between)) + # remember to convert cluster to factor
geom_node_text(aes(label = Label, size = rank)) +
theme_graph() +
theme(
legend.position = "none"
)
library(tidygraph)
library(ggraph)
library(igraph)
library(tidyverse)
library(ggtext)
library(grid)
library(gridExtra)
library(gridtext)
set.seed(123)
top_char_net <- net1 |>
activate(nodes) |>
mutate(
Label = ifelse(
Label %in% top_characters,
Label,
""
))
text_grob <- grobTree(richtext_grob(
"<span style=\"fontsize: 1em\"><br><br>The top characters in each community based on their number of connections. <br>Sansa of House Stark and Daenarys Mother of Dragons are the most important characters in that<br>they are the most central to the overall narrative.</span>",
gp = gpar(fontsize = 8), hjust = 0, align_widths = TRUE, padding = unit(c(6, 6, 4, 6), "pt")
))
ggraph(top_char_net, layout = "stress") +
geom_edge_link2(aes(alpha = Weight)) +
geom_node_point(aes(color = factor(cluster), size = between)) + # remember to convert cluster to factor
geom_node_text(aes(label = Label, size = rank)) +
annotation_custom(blue_text_grob, xmin = -20.2, ymin = 33) +
theme_graph() +
theme(
legend.position = "none"
)
set.seed(123)
top_char_net <- net1 |>
activate(nodes) |>
mutate(
Label = ifelse(
Label %in% top_characters,
Label,
""
))
text_grob <- grobTree(richtext_grob(
"<span style=\"fontsize: 1em\"><br><br>The top characters in each community based on their number of connections. <br>Sansa of House Stark and Daenarys Mother of Dragons are the most important characters in that<br>they are the most central to the overall narrative.</span>",
gp = gpar(fontsize = 8), hjust = 0, align_widths = TRUE, padding = unit(c(6, 6, 4, 6), "pt")
))
ggraph(top_char_net, layout = "stress") +
geom_edge_link2(aes(alpha = Weight)) +
geom_node_point(aes(color = factor(cluster), size = between)) + # remember to convert cluster to factor
geom_node_text(aes(label = Label, size = rank)) +
annotation_custom(text_grob, xmin = -20.2, ymin = 33) +
theme_graph() +
theme(
legend.position = "none"
)
set.seed(123)
top_char_net <- net1 |>
activate(nodes) |>
mutate(
Label = ifelse(
Label %in% top_characters,
Label,
""
))
text_grob <- grobTree(richtext_grob(
"<span style=\"fontsize: 1em\"><br><br>The top characters in each community based on their number of connections. <br>Sansa of House Stark and Daenarys Mother of Dragons are the most important characters in that<br>they are the most central to the overall narrative.</span>",
gp = gpar(fontsize = 8), hjust = 0, align_widths = TRUE, padding = unit(c(6, 6, 4, 6), "pt")
))
ggraph(top_char_net, layout = "stress") +
geom_edge_link2(aes(alpha = Weight)) +
geom_node_point(aes(color = factor(cluster), size = between)) + # remember to convert cluster to factor
geom_node_text(aes(label = Label, size = rank)) +
annotation_custom(text_grob, xmin = -20.2, ymin = 33) +
annotate("text", label = "bold(Sophistication~increases~with~time)", x = 4.5, y = 50, parse = TRUE) +
theme_graph() +
theme(
legend.position = "none"
)
set.seed(123)
top_char_net <- net1 |>
activate(nodes) |>
mutate(
Label = ifelse(
Label %in% top_characters,
Label,
""
))
text_grob <- grobTree(richtext_grob(
"<span style=\"fontsize: 1em\"><br><br>The top characters in each community based on their number of connections. <br>Sansa of House Stark and Daenarys Mother of Dragons are the most important characters in that<br>they are the most central to the overall narrative.</span>",
gp = gpar(fontsize = 8), hjust = 0, align_widths = TRUE, padding = unit(c(6, 6, 4, 6), "pt")
))
ggraph(top_char_net, layout = "stress") +
geom_edge_link2(aes(alpha = Weight)) +
geom_node_point(aes(color = factor(cluster), size = between)) + # remember to convert cluster to factor
geom_node_text(aes(label = Label, size = rank)) +
theme_graph() +
annotation_custom(text_grob, xmin = -20.2, ymin = 33) +
annotate("text", label = "bold(Sophistication~increases~with~time)", x = 4.5, y = 50, parse = TRUE) +
theme(
legend.position = "none"
)
set.seed(123)
top_char_net <- net1 |>
activate(nodes) |>
mutate(
Label = ifelse(
Label %in% top_characters,
Label,
""
))
text_grob <- grobTree(richtext_grob(
"<span style=\"fontsize: 1em\"><br><br>The top characters in each community based on their number of connections. <br>Sansa of House Stark and Daenarys Mother of Dragons are the most important characters in that<br>they are the most central to the overall narrative.</span>",
gp = gpar(fontsize = 8), hjust = 0, align_widths = TRUE, padding = unit(c(6, 6, 4, 6), "pt")
))
ggraph(top_char_net, layout = "stress") +
annotation_custom(text_grob, xmin = -20.2, ymin = 33) +
annotate("text", label = "bold(Sophistication~increases~with~time)", x = 4.5, y = 50, parse = TRUE) +
geom_edge_link2(aes(alpha = Weight)) +
geom_node_point(aes(color = factor(cluster), size = between)) + # remember to convert cluster to factor
geom_node_text(aes(label = Label, size = rank)) +
theme_graph() +
theme(
legend.position = "none"
)
set.seed(123)
top_char_net <- net1 |>
activate(nodes) |>
mutate(
Label = ifelse(
Label %in% top_characters,
Label,
""
))
text_grob <- grobTree(richtext_grob(
"<span style=\"fontsize: 1em\"><br><br>The top characters in each community based on their number of connections. <br>Sansa of House Stark and Daenarys Mother of Dragons are the most important characters in that<br>they are the most central to the overall narrative.</span>",
gp = gpar(fontsize = 8), hjust = 0, align_widths = TRUE, padding = unit(c(6, 6, 4, 6), "pt")
))
ggraph(top_char_net, layout = "stress") +
geom_edge_link2(aes(alpha = Weight)) +
geom_node_point(aes(color = factor(cluster), size = between)) + # remember to convert cluster to factor
geom_node_text(aes(label = Label, size = rank)) +
theme_graph() +
theme(
legend.position = "none"
)
set.seed(123)
top_char_net <- net1 |>
activate(nodes) |>
mutate(
Label = ifelse(
Label %in% top_characters,
Label,
""
))
text_grob <- grobTree(richtext_grob(
"<span style=\"fontsize: 1em\"><br><br>The top characters in each community based on their number of connections. <br>Sansa of House Stark and Daenarys Mother of Dragons are the most important characters in that<br>they are the most central to the overall narrative.</span>",
gp = gpar(fontsize = 8), hjust = 0, align_widths = TRUE, padding = unit(c(6, 6, 4, 6), "pt")
))
ggraph(top_char_net, layout = "stress") +
geom_edge_link2(aes(alpha = Weight)) +
geom_node_point(aes(color = factor(cluster), size = between)) + # remember to convert cluster to factor
geom_node_text(aes(label = Label, size = rank)) +
theme_graph() +
theme(
legend.position = "none"
) +
annotation_custom(text_grob, xmin = -20.2, ymin = 33) +
annotate("text", label = "bold(Sophistication~increases~with~time)", x = 4.5, y = 50, parse = TRUE)
set.seed(123)
top_char_net <- net1 |>
activate(nodes) |>
mutate(
Label = ifelse(
Label %in% top_characters,
Label,
""
))
text_grob <- grobTree(richtext_grob(
"<span style=\"fontsize: 1em\"><br><br>The top characters in each community based on their number of connections. <br>Sansa of House Stark and Daenarys Mother of Dragons are the most important characters in that<br>they are the most central to the overall narrative.</span>",
gp = gpar(fontsize = 8), hjust = 0, align_widths = TRUE, padding = unit(c(6, 6, 4, 6), "pt")
))
ggraph(top_char_net, layout = "stress") +
geom_edge_link2(aes(alpha = Weight)) +
geom_node_point(aes(color = factor(cluster), size = between)) + # remember to convert cluster to factor
geom_node_text(aes(label = Label, size = rank)) +
theme_graph() +
theme(
legend.position = "none"
)
set.seed(123)
top_char_net <- net1 |>
activate(nodes) |>
mutate(
Label = ifelse(
Label %in% top_characters,
Label,
""
))
text_grob <- grobTree(richtext_grob(
"<span style=\"fontsize: 1em\"><br><br>The top characters in each community based on their number of connections. <br>Sansa of House Stark and Daenarys Mother of Dragons are the most important characters in that<br>they are the most central to the overall narrative.</span>",
gp = gpar(fontsize = 8), hjust = 0, align_widths = TRUE, padding = unit(c(6, 6, 4, 6), "pt")
))
ggraph(top_char_net, layout = "stress") +
geom_edge_link2(aes(alpha = Weight)) +
geom_node_point(aes(color = factor(cluster), size = between)) + # remember to convert cluster to factor
geom_node_text(aes(label = Label, size = rank+5)) +
theme_graph() +
theme(
legend.position = "none"
)
set.seed(123)
top_char_net <- net1 |>
activate(nodes) |>
mutate(
Label = ifelse(
Label %in% top_characters,
Label,
""
))
text_grob <- grobTree(richtext_grob(
"<span style=\"fontsize: 1em\"><br><br>The top characters in each community based on their number of connections. <br>Sansa of House Stark and Daenarys Mother of Dragons are the most important characters in that<br>they are the most central to the overall narrative.</span>",
gp = gpar(fontsize = 8), hjust = 0, align_widths = TRUE, padding = unit(c(6, 6, 4, 6), "pt")
))
ggraph(top_char_net, layout = "stress") +
geom_edge_link2(aes(alpha = Weight)) +
geom_node_point(aes(color = factor(cluster), size = between)) + # remember to convert cluster to factor
geom_node_text(aes(label = Label, size = rank+50)) +
theme_graph() +
theme(
legend.position = "none"
)
set.seed(123)
top_char_net <- net1 |>
activate(nodes) |>
mutate(
Label = ifelse(
Label %in% top_characters,
Label,
""
))
text_grob <- grobTree(richtext_grob(
"<span style=\"fontsize: 1em\"><br><br>The top characters in each community based on their number of connections. <br>Sansa of House Stark and Daenarys Mother of Dragons are the most important characters in that<br>they are the most central to the overall narrative.</span>",
gp = gpar(fontsize = 8), hjust = 0, align_widths = TRUE, padding = unit(c(6, 6, 4, 6), "pt")
))
ggraph(top_char_net, layout = "stress") +
geom_edge_link2(aes(alpha = Weight)) +
geom_node_point(aes(color = factor(cluster), size = between)) + # remember to convert cluster to factor
geom_node_text(aes(label = Label, size = rank+80)) +
theme_graph() +
theme(
legend.position = "none"
)
set.seed(123)
top_char_net <- net1 |>
activate(nodes) |>
mutate(
Label = ifelse(
Label %in% top_characters,
Label,
""
))
text_grob <- grobTree(richtext_grob(
"<span style=\"fontsize: 1em\"><br><br>The top characters in each community based on their number of connections. <br>Sansa of House Stark and Daenarys Mother of Dragons are the most important characters in that<br>they are the most central to the overall narrative.</span>",
gp = gpar(fontsize = 8), hjust = 0, align_widths = TRUE, padding = unit(c(6, 6, 4, 6), "pt")
))
ggraph(top_char_net, layout = "stress") +
geom_edge_link2(aes(alpha = Weight)) +
geom_node_point(aes(color = factor(cluster), size = between)) + # remember to convert cluster to factor
geom_node_text(aes(label = Label, size = rank)) +
theme_graph() +
theme(
legend.position = "none"
)
net1 |>
activate(nodes) |>
mutate(
Label = ifelse(
Label %in% top_characters,
Label,
""
))
net1 <- got_tidygraph |>
activate(nodes) |>
mutate(
# cluster = group_louvain(),
cluster = centrality_degree(),
between = centrality_betweenness(),
rank = centrality_pagerank()
)
library(tidygraph)
library(ggraph)
library(igraph)
library(tidyverse)
library(ggtext)
library(grid)
library(gridExtra)
library(gridtext)
got_s6_edges <- read_csv("data/got-s6-edges.csv")
got_s6_nodes <- read_csv("data/got-s6-nodes.csv")
str(got_s6_edges)
str(got_s6_nodes)
got_igraph <- graph_from_data_frame(
got_s6_edges,
directed = FALSE,
vertices = got_s6_nodes
)
got_tidygraph <- tbl_graph(nodes = got_s6_nodes, edges = got_s6_edges, directed = FALSE)
got_tidygraph
got_tidygraph |> activate(edges) |> as_tibble() |> summarise(total_interactions = sum(Weight))
net1 <- got_tidygraph |>
activate(nodes) |>
mutate(
# cluster = group_louvain(),
cluster = centrality_degree(),
between = centrality_betweenness(),
rank = centrality_pagerank()
)
set.seed(123)
ggraph(net1, layout = "stress") +
geom_edge_link2(aes(alpha = Weight)) +
geom_node_point(aes(color = factor(cluster), size = between)) + # remember to convert cluster to factor
geom_node_text(aes(label = Label, size = rank)) +
theme_graph() +
theme(
legend.position = "none"
)
# get total number of communities
got_clusters <- net1 |>
activate(nodes) |>
select(cluster) |>
pull() |> unique() |> sort()
# Quick print view of the top characters of each community by degree centrality.
for (i in got_clusters) {
tops <- net1 |>
activate(nodes) |>
mutate(degree = centrality_degree()) |>
filter(cluster == i) |>
arrange(desc(degree))
print(tops)
}
#
top_characters <- c()
for (i in got_clusters) {
tops <- net1 |>
activate(nodes) |>
mutate(degree = centrality_degree()) |>
filter(cluster == i) |>
arrange(desc(degree)) |>
top_n(degree, n = 1) |>
pull(Label)
top_characters <- top_characters |> append(tops)
}
top_characters
set.seed(123)
top_char_net <- net1 |>
activate(nodes) |>
mutate(
Label = ifelse(
Label %in% top_characters,
Label,
""
))
text_grob <- grobTree(richtext_grob(
"<span style=\"fontsize: 1em\"><br><br>The top characters in each community based on their number of connections. <br>Sansa of House Stark and Daenarys Mother of Dragons are the most important characters in that<br>they are the most central to the overall narrative.</span>",
gp = gpar(fontsize = 8), hjust = 0, align_widths = TRUE, padding = unit(c(6, 6, 4, 6), "pt")
))
ggraph(top_char_net, layout = "stress") +
geom_edge_link2(aes(alpha = Weight)) +
geom_node_point(aes(color = factor(cluster), size = between)) + # remember to convert cluster to factor
geom_node_text(aes(label = Label, size = rank)) +
theme_graph() +
theme(
legend.position = "none"
)
library(tidygraph)
library(ggraph)
library(igraph)
library(tidyverse)
library(ggtext)
library(grid)
library(gridExtra)
library(gridtext)
got_s6_edges <- read_csv("data/got-s6-edges.csv")
got_s6_nodes <- read_csv("data/got-s6-nodes.csv")
str(got_s6_edges)
str(got_s6_nodes)
got_igraph <- graph_from_data_frame(
got_s6_edges,
directed = FALSE,
vertices = got_s6_nodes
)
got_tidygraph <- tbl_graph(nodes = got_s6_nodes, edges = got_s6_edges, directed = FALSE)
got_tidygraph
got_tidygraph |> activate(edges) |> as_tibble() |> summarise(total_interactions = sum(Weight))
net1 <- got_tidygraph |>
activate(nodes) |>
mutate(
cluster = group_louvain(),
between = centrality_betweenness(),
rank = centrality_pagerank()
)
set.seed(123)
ggraph(net1, layout = "stress") +
geom_edge_link2(aes(alpha = Weight)) +
geom_node_point(aes(color = factor(cluster), size = between)) + # remember to convert cluster to factor
geom_node_text(aes(label = Label, size = rank)) +
theme_graph() +
theme(
legend.position = "none"
)
# get total number of communities
got_clusters <- net1 |>
activate(nodes) |>
select(cluster) |>
pull() |> unique() |> sort()
# Quick print view of the top characters of each community by degree centrality.
for (i in got_clusters) {
tops <- net1 |>
activate(nodes) |>
mutate(degree = centrality_degree()) |>
filter(cluster == i) |>
arrange(desc(degree))
print(tops)
}
#
top_characters <- c()
for (i in got_clusters) {
tops <- net1 |>
activate(nodes) |>
mutate(degree = centrality_degree()) |>
filter(cluster == i) |>
arrange(desc(degree)) |>
top_n(degree, n = 1) |>
pull(Label)
top_characters <- top_characters |> append(tops)
}
top_characters
set.seed(123)
top_char_net <- net1 |>
activate(nodes) |>
mutate(
Label = ifelse(
Label %in% top_characters,
Label,
""
))
text_grob <- grobTree(richtext_grob(
"<span style=\"fontsize: 1em\"><br><br>The top characters in each community based on their number of connections. <br>Sansa of House Stark and Daenarys Mother of Dragons are the most important characters in that<br>they are the most central to the overall narrative.</span>",
gp = gpar(fontsize = 8), hjust = 0, align_widths = TRUE, padding = unit(c(6, 6, 4, 6), "pt")
))
ggraph(top_char_net, layout = "stress") +
geom_edge_link2(aes(alpha = Weight)) +
geom_node_point(aes(color = factor(cluster), size = between)) + # remember to convert cluster to factor
geom_node_text(aes(label = Label, size = rank)) +
theme_graph() +
theme(
legend.position = "none"
)
