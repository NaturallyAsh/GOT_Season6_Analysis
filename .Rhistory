library(tidyverse)
got_s6_edges <- read_csv("https://raw.githubusercontent.com/mathbeveridge/gameofthrones/master/data/got-s6-edges.csv")
got_s6_nodes <- read_csv("https://raw.githubusercontent.com/mathbeveridge/gameofthrones/master/data/got-s6-nodes.csv")
write_csv(got_s6_edges, "data/got-s6-edges.csv")
write_csv(got_s6_nodes, "data/got-s6-nodes.csv")
got_s6_nodes <- read_csv("data/got-s6-nodes.csv")
got_s6_edges <- read_csv("data/got-s6-edges.csv")
library(tidygraph)
library(ggraph)
library(igraph)
library(tidyverse)
str(got_s6_edges)
str(got_s6_nodes)
str(got_s6_edges)
library(tidygraph)
library(ggraph)
library(igraph)
library(tidyverse)
got_s6_edges <- read_csv("data/got-s6-edges.csv")
got_s6_nodes <- read_csv("data/got-s6-nodes.csv")
str(got_s6_edges)
str(got_s6_nodes)
library(tidygraph)
library(ggraph)
library(igraph)
library(tidyverse)
got_s6_edges <- read_csv("data/got-s6-edges.csv")
got_s6_nodes <- read_csv("data/got-s6-nodes.csv")
str(got_s6_edges)
str(got_s6_nodes)
str(got_s6_nodes)
str(got_s6_edges)
str(got_s6_nodes)
tbl_graph(nodes = got_s6_nodes, edges = got_s6_edges, directed = FALSE)
got_graph <- tbl_graph(nodes = got_s6_nodes, edges = got_s6_edges, directed = FALSE)
got_graph
components(got_graph)
ggraph(got_graph, layout = "fr") +
geom_edge_link() +
geom_node_point()
ggraph(got_graph) +
geom_edge_link() +
geom_node_point()
got_graph |>
activate(nodes) |>
mutate(
cluster = group_louvain(),
between = centrality_betweenness()
)
got_graph |>
activate(nodes) |>
mutate(
cluster = group_louvain(),
between = centrality_betweenness()
) |>
ggraph() +
geom_edge_link(aes(size = Weight)) +
geom_node_point(aes(color = cluster))
got_graph |>
activate(nodes) |>
mutate(
cluster = group_louvain(),
between = centrality_betweenness()
) |>
ggraph() +
geom_edge_link(aes(size = Weight)) +
geom_node_point(aes(color = factor(cluster)))
got_graph |>
activate(nodes) |>
mutate(
cluster = group_louvain(),
between = centrality_betweenness()
) |>
ggraph() +
geom_edge_link(aes(alpha = Weight)) +
geom_node_point(aes(color = factor(cluster))) # remember to convert cluster to factor
got_graph |>
activate(nodes) |>
mutate(
cluster = group_louvain(),
between = centrality_betweenness()
) |>
ggraph() +
geom_edge_link(aes(alpha = Weight), show.legend = FALSE) +
geom_node_point(aes(color = factor(cluster)), show.legend = FALSE) # remember to convert cluster to factor
got_graph |>
activate(nodes) |>
mutate(
cluster = group_louvain(),
between = centrality_betweenness(),
rank = node_rank_traveller()
) |>
ggraph() +
geom_edge_link(aes(alpha = Weight), show.legend = FALSE) +
geom_node_point(aes(color = factor(cluster)), show.legend = FALSE) + # remember to convert cluster to factor
geom_node_text(aes(label = rank))
got_graph |>
activate(nodes) |>
mutate(
cluster = group_louvain(),
between = centrality_betweenness(),
rank = node_rank_traveller()
) |>
ggraph() +
geom_edge_link(aes(alpha = Weight), show.legend = FALSE) +
geom_node_point(aes(color = factor(cluster)), show.legend = FALSE) + # remember to convert cluster to factor
geom_node_text(aes(label = rank))
got_graph |>
activate(nodes) |>
mutate(
cluster = group_louvain(),
between = centrality_betweenness(),
rank = node_rank_traveller()
) |>
ggraph() +
geom_edge_link(aes(alpha = Weight), show.legend = FALSE) +
geom_node_point(aes(color = factor(cluster)), show.legend = FALSE) + # remember to convert cluster to factor
geom_node_text(aes(label = Label), size = rank)
got_graph |>
activate(nodes) |>
mutate(
cluster = group_louvain(),
between = centrality_betweenness(),
rank = node_rank_traveller()
) |>
ggraph() +
geom_edge_link(aes(alpha = Weight), show.legend = FALSE) +
geom_node_point(aes(color = factor(cluster)), show.legend = FALSE) + # remember to convert cluster to factor
geom_node_text(aes(label = Label))
got_graph |>
activate(nodes) |>
mutate(
cluster = group_louvain(),
between = centrality_betweenness(),
rank = node_rank_traveller()
) |>
ggraph() +
geom_edge_link(aes(alpha = Weight), show.legend = FALSE) +
geom_node_point(aes(color = factor(cluster)), show.legend = FALSE) + # remember to convert cluster to factor
geom_node_text(aes(label = Label, size = rank))
got_graph |>
activate(nodes) |>
mutate(
cluster = group_louvain(),
between = centrality_betweenness(),
rank = node_rank_traveller()
) |>
ggraph() +
geom_edge_link(aes(alpha = Weight), show.legend = FALSE) +
geom_node_point(aes(color = factor(cluster)), show.legend = FALSE) + # remember to convert cluster to factor
geom_node_text(aes(label = Label, size = rank), show.legend = FALSE)
set.seed(123)
got_graph |>
activate(nodes) |>
mutate(
cluster = group_louvain(),
between = centrality_betweenness(),
rank = node_rank_traveller()
) |>
ggraph() +
geom_edge_link(aes(alpha = Weight), show.legend = FALSE) +
geom_node_point(aes(color = factor(cluster)), show.legend = FALSE) + # remember to convert cluster to factor
geom_node_text(aes(label = Label, size = rank), show.legend = FALSE)
got_graph |>
activate(nodes) |>
mutate(
cluster = group_louvain(),
between = centrality_betweenness(),
rank = node_rank_traveller()
) |>
ggraph() +
geom_edge_link(aes(alpha = Weight), show.legend = FALSE) +
geom_node_point(aes(color = factor(cluster), size = between), show.legend = FALSE) + # remember to convert cluster to factor
geom_node_text(aes(label = Label, size = rank), show.legend = FALSE)
got_graph |>
activate(nodes) |>
mutate(
cluster = group_louvain(),
between = centrality_betweenness(),
rank = node_rank_traveller()
) |>
ggraph() +
geom_edge_link(aes(alpha = Weight), show.legend = FALSE) +
geom_node_point(aes(color = factor(cluster), size = between), show.legend = FALSE) + # remember to convert cluster to factor
geom_node_text(aes(label = Label, size = rank), repel = TRUE, show.legend = FALSE)
got_graph |>
activate(nodes) |>
mutate(
cluster = group_louvain(),
between = centrality_betweenness(),
rank = node_rank_traveller()
) |>
ggraph() +
geom_edge_link(aes(alpha = Weight), show.legend = FALSE) +
geom_node_point(aes(color = factor(cluster), size = between), show.legend = FALSE) + # remember to convert cluster to factor
geom_node_text(aes(label = Label, size = rank), show.legend = FALSE)
got_graph |>
activate(nodes) |>
mutate(
cluster = group_infomap(),
between = centrality_betweenness(),
rank = node_rank_traveller()
) |>
ggraph() +
geom_edge_link(aes(alpha = Weight), show.legend = FALSE) +
geom_node_point(aes(color = factor(cluster), size = between), show.legend = FALSE) + # remember to convert cluster to factor
geom_node_text(aes(label = Label, size = rank), show.legend = FALSE)
graph1 <- got_graph |>
activate(nodes) |>
mutate(
cluster = group_infomap(),
between = centrality_betweenness(),
rank = node_rank_traveller()
)
set.seed(123)
ggraph(graph1) +
geom_edge_link(aes(alpha = Weight), show.legend = FALSE) +
geom_node_point(aes(color = factor(cluster), size = between), show.legend = FALSE) + # remember to convert cluster to factor
geom_node_text(aes(label = Label, size = rank), show.legend = FALSE)
graph1 <- got_graph |>
activate(nodes) |>
mutate(
cluster = group_infomap(),
between = centrality_betweenness(),
rank = centrality_pagerank()
)
set.seed(123)
ggraph(graph1) +
geom_edge_link(aes(alpha = Weight), show.legend = FALSE) +
geom_node_point(aes(color = factor(cluster), size = between), show.legend = FALSE) + # remember to convert cluster to factor
geom_node_text(aes(label = Label, size = rank), show.legend = FALSE)
graph1 <- got_graph |>
activate(nodes) |>
mutate(
cluster = group_infomap(),
between = centrality_betweenness(),
rank = node_rank_traveller()
)
set.seed(123)
ggraph(graph1) +
geom_edge_link(aes(alpha = Weight), show.legend = FALSE) +
geom_node_point(aes(color = factor(cluster), size = between), show.legend = FALSE) + # remember to convert cluster to factor
geom_node_text(aes(label = Label, size = rank), show.legend = FALSE)
ggraph(graph1) +
geom_edge_link(aes(alpha = Weight), show.legend = FALSE) +
geom_node_point(aes(color = factor(cluster), size = between), show.legend = FALSE) + # remember to convert cluster to factor
geom_node_text(aes(label = Label, size = rank), repel = TRUE, show.legend = FALSE)
ggraph(graph1) +
geom_edge_link(aes(alpha = Weight), show.legend = FALSE) +
geom_node_point(aes(color = factor(cluster), size = between), show.legend = FALSE) + # remember to convert cluster to factor
geom_node_text(aes(label = Label, size = rank), show.legend = FALSE)
graph1 <- got_graph |>
activate(nodes) |>
mutate(
cluster = group_infomap(),
between = centrality_betweenness(),
rank = centrality_pagerank()
)
set.seed(123)
ggraph(graph1) +
geom_edge_link(aes(alpha = Weight), show.legend = FALSE) +
geom_node_point(aes(color = factor(cluster), size = between), show.legend = FALSE) + # remember to convert cluster to factor
geom_node_text(aes(label = Label, size = rank), show.legend = FALSE)
graph1 <- got_graph |>
activate(nodes) |>
mutate(
cluster = group_infomap(),
between = centrality_betweenness(),
rank = node_rank_traveller()
)
set.seed(123)
ggraph(graph1) +
geom_edge_link(aes(alpha = Weight), show.legend = FALSE) +
geom_node_point(aes(color = factor(cluster), size = between), show.legend = FALSE) + # remember to convert cluster to factor
geom_node_text(aes(label = Label, size = rank), show.legend = FALSE)
snahelper:::SNAhelperAddin()
graph1 <- got_graph |>
activate(nodes) |>
mutate(
cluster = as.factor(group_infomap()),
between = centrality_betweenness(),
rank = node_rank_traveller()
)
set.seed(123)
ggraph(graph1) +
geom_edge_link(aes(alpha = Weight), show.legend = FALSE) +
geom_node_point(aes(color = cluster, size = between), show.legend = FALSE) + # remember to convert cluster to factor
geom_node_text(aes(label = Label, size = rank), show.legend = FALSE)
snahelper:::SNAhelperAddin()
snahelper:::SNAhelperAddin()
graph1$cluster
V(graph1)$cluster
sizes(V(graph1)$cluster)
sizes(graph1$cluster)
V(graph1)$cluster
graph1 <- got_graph |>
activate(nodes) |>
mutate(
cluster = group_infomap(),
between = centrality_betweenness(),
rank = node_rank_traveller()
)
V(graph1)$cluster
sizes(V(graph1)$cluster)
comm <- V(graph1)$cluster
sizes(comm)
rm(comm)
graph1 <- got_graph |>
activate(nodes) |>
mutate(
cluster = as.factor(group_infomap()),
between = centrality_betweenness(),
rank = node_rank_traveller()
)
graph1 <- got_graph |>
activate(nodes) |>
mutate(
cluster = group_infomap(),
between = centrality_betweenness(),
rank = node_rank_traveller()
)
got_igraph <- graph_from_data_frame(
got_s6_edges,
directed = FALSE,
vertices = got_s6_nodes
)
got_tidygraph <- tbl_graph(nodes = got_s6_nodes, edges = got_s6_edges, directed = FALSE)
got_tidygraph
rm(got_graph)
graph1 <- got_tidygraph |>
activate(nodes) |>
mutate(
cluster = group_infomap(),
between = centrality_betweenness(),
rank = node_rank_traveller()
)
ggraph(graph1) +
geom_edge_arc(aes(alpha = Weight), show.legend = FALSE) +
geom_node_point(aes(color = factor(cluster), size = between), show.legend = FALSE) + # remember to convert cluster to factor
geom_node_text(aes(label = Label, size = rank), show.legend = FALSE)
ggraph(graph1) +
geom_edge_arc0(aes(alpha = Weight), show.legend = FALSE) +
geom_node_point(aes(color = factor(cluster), size = between), show.legend = FALSE) + # remember to convert cluster to factor
geom_node_text(aes(label = Label, size = rank), show.legend = FALSE)
ggraph(graph1) +
geom_edge_arc2(aes(alpha = Weight), show.legend = FALSE) +
geom_node_point(aes(color = factor(cluster), size = between), show.legend = FALSE) + # remember to convert cluster to factor
geom_node_text(aes(label = Label, size = rank), show.legend = FALSE)
ggraph(graph1) +
geom_edge_arc(aes(alpha = Weight), show.legend = FALSE) +
geom_node_point(aes(color = factor(cluster), size = between), show.legend = FALSE) + # remember to convert cluster to factor
geom_node_text(aes(label = Label, size = rank), show.legend = FALSE)
ggraph(graph1) +
geom_edge_loop(aes(alpha = Weight), show.legend = FALSE) +
geom_node_point(aes(color = factor(cluster), size = between), show.legend = FALSE) + # remember to convert cluster to factor
geom_node_text(aes(label = Label, size = rank), show.legend = FALSE)
ggraph(graph1) +
geom_edge_link(aes(alpha = Weight), show.legend = FALSE) +
geom_node_point(aes(color = factor(cluster), size = between), show.legend = FALSE) + # remember to convert cluster to factor
geom_node_text(aes(label = Label, size = rank), show.legend = FALSE)
ggraph(graph1) +
geom_edge_link0(aes(alpha = Weight), show.legend = FALSE) +
geom_node_point(aes(color = factor(cluster), size = between), show.legend = FALSE) + # remember to convert cluster to factor
geom_node_text(aes(label = Label, size = rank), show.legend = FALSE)
ggraph(graph1) +
geom_edge_link2(aes(alpha = Weight), show.legend = FALSE) +
geom_node_point(aes(color = factor(cluster), size = between), show.legend = FALSE) + # remember to convert cluster to factor
geom_node_text(aes(label = Label, size = rank), show.legend = FALSE)
ggraph(graph1, layout = layout_with_mds()) +
geom_edge_link2(aes(alpha = Weight), show.legend = FALSE) +
geom_node_point(aes(color = factor(cluster), size = between), show.legend = FALSE) + # remember to convert cluster to factor
geom_node_text(aes(label = Label, size = rank), show.legend = FALSE)
ggraph(graph1, layout = layout_with_mds(.)) +
geom_edge_link2(aes(alpha = Weight), show.legend = FALSE) +
geom_node_point(aes(color = factor(cluster), size = between), show.legend = FALSE) + # remember to convert cluster to factor
geom_node_text(aes(label = Label, size = rank), show.legend = FALSE)
ggraph(graph1, layout = "mds") +
geom_edge_link2(aes(alpha = Weight), show.legend = FALSE) +
geom_node_point(aes(color = factor(cluster), size = between), show.legend = FALSE) + # remember to convert cluster to factor
geom_node_text(aes(label = Label, size = rank), show.legend = FALSE)
ggraph(graph1, layout = "fr") +
geom_edge_link2(aes(alpha = Weight), show.legend = FALSE) +
geom_node_point(aes(color = factor(cluster), size = between), show.legend = FALSE) + # remember to convert cluster to factor
geom_node_text(aes(label = Label, size = rank), show.legend = FALSE)
ggraph(graph1, layout = "kk") +
geom_edge_link2(aes(alpha = Weight), show.legend = FALSE) +
geom_node_point(aes(color = factor(cluster), size = between), show.legend = FALSE) + # remember to convert cluster to factor
geom_node_text(aes(label = Label, size = rank), show.legend = FALSE)
ggraph(graph1, layout = "random") +
geom_edge_link2(aes(alpha = Weight), show.legend = FALSE) +
geom_node_point(aes(color = factor(cluster), size = between), show.legend = FALSE) + # remember to convert cluster to factor
geom_node_text(aes(label = Label, size = rank), show.legend = FALSE)
ggraph(graph1, layout = "stress") +
geom_edge_link2(aes(alpha = Weight), show.legend = FALSE) +
geom_node_point(aes(color = factor(cluster), size = between), show.legend = FALSE) + # remember to convert cluster to factor
geom_node_text(aes(label = Label, size = rank), show.legend = FALSE)
ggraph(graph1, layout = "lgl") +
geom_edge_link2(aes(alpha = Weight), show.legend = FALSE) +
geom_node_point(aes(color = factor(cluster), size = between), show.legend = FALSE) + # remember to convert cluster to factor
geom_node_text(aes(label = Label, size = rank), show.legend = FALSE)
ggraph(graph1, layout = "stress") +
geom_edge_link2(aes(alpha = Weight), show.legend = FALSE) +
geom_node_point(aes(color = factor(cluster), size = between), show.legend = FALSE) + # remember to convert cluster to factor
geom_node_text(aes(label = Label, size = rank), show.legend = FALSE)
ggraph(graph1, layout = "nicely") +
geom_edge_link2(aes(alpha = Weight), show.legend = FALSE) +
geom_node_point(aes(color = factor(cluster), size = between), show.legend = FALSE) + # remember to convert cluster to factor
geom_node_text(aes(label = Label, size = rank), show.legend = FALSE)
ggraph(graph1, layout = "stress") +
geom_edge_link2(aes(alpha = Weight), show.legend = FALSE) +
geom_node_point(aes(color = factor(cluster), size = between), show.legend = FALSE) + # remember to convert cluster to factor
geom_node_text(aes(label = Label, size = rank), show.legend = FALSE)
graph1 |>
activate(nodes) |>
select(cluster) |>
unique()
graph1 |>
activate(nodes) |>
select(cluster) |>
pull()
graph1 |>
activate(nodes) |>
select(cluster) |>
pull() |>
unique()
graph1 |>
activate(nodes) |>
select(cluster) |>
pull() |>
unique() |> sort()
ggraph(graph1, layout = "stress") +
geom_edge_link2(aes(alpha = Weight), show.legend = FALSE) +
geom_node_point(aes(color = factor(cluster), size = between), show.legend = FALSE) + # remember to convert cluster to factor
geom_node_label(aes(label = Label, size = rank), show.legend = FALSE)
ggraph(graph1, layout = "stress") +
geom_edge_link2(aes(alpha = Weight), show.legend = FALSE) +
geom_node_point(aes(color = factor(cluster), size = between), show.legend = FALSE) + # remember to convert cluster to factor
geom_node_text(aes(label = Label, size = rank), show.legend = FALSE)
ggraph(graph1, layout = "stress") +
geom_edge_link2(aes(alpha = Weight), show.legend = FALSE) +
geom_node_point(aes(color = factor(cluster), size = between), show.legend = FALSE) + # remember to convert cluster to factor
geom_node_text(aes(label = Label, size = rank), nudge_x = 0.1, show.legend = FALSE)
ggraph(graph1, layout = "stress") +
geom_edge_link2(aes(alpha = Weight), show.legend = FALSE) +
geom_node_point(aes(color = factor(cluster), size = between), show.legend = FALSE) + # remember to convert cluster to factor
geom_node_text(aes(label = Label, size = rank), nudge_x = 1, show.legend = FALSE)
ggraph(graph1, layout = "stress") +
geom_edge_link2(aes(alpha = Weight), show.legend = FALSE) +
geom_node_point(aes(color = factor(cluster), size = between), show.legend = FALSE) + # remember to convert cluster to factor
geom_node_text(aes(label = Label, size = rank), show.legend = FALSE)
graph1 |>
activate(nodes) |>
mutate(key = node_is_keyplayer(10))
install.packages("influenceR")
install.packages("influenceR")
install.packages("jmv")
